# Copyright (C) 2023 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workspace(name = "gbl")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_rust",
    url = "https://android.googlesource.com/platform/external/bazelbuild-rules_rust/+archive/78760f889ea04beeb880185cdee6a0ebcc71aeb2.tar.gz",
)

http_archive(
    name = "rules_rust_tinyjson",
    build_file = "@rules_rust//util/process_wrapper:BUILD.tinyjson.bazel",
    url = "https://android.googlesource.com/platform/external/rust/crates/tinyjson/+archive/bd3c80f2d602fe6aab658d32af8380febee844e2.tar.gz",
)

load(
    "//toolchain:gbl_workspace_util.bzl",
    "gbl_custom_rust_sysroot",
    "gbl_llvm_prebuilts",
)

# Set up a repo to export llvm tool path and builtin include directory needed
# by toolchain declaration.
gbl_llvm_prebuilts(name = "gbl_llvm_prebuilts")

# The repo contains ELF definitions needed for our elf library.
http_archive(
    name = "elfutils",
    build_file_content = """
cc_library(
    name = "elf_type_header",
    hdrs = ["libelf/elf.h"],
    visibility = ["//visibility:public"],
)
""",
    url = "https://android.googlesource.com/platform/external/elfutils/+archive/refs/heads/main.tar.gz",
)

# For C/C++ unit-tests
http_archive(
    name = "googletest",
    url = "https://android.googlesource.com/platform/external/googletest/+archive/refs/heads/main.tar.gz",
)

load("@gbl//android_external_rust_crates:repositories.bzl", "android_external_rust_crates_repositories")

android_external_rust_crates_repositories()

gbl_custom_rust_sysroot(name = "gbl_custom_rust_sysroot")

# Fetch Android upstream rust prebuilts:
# https://android.googlesource.com/platform/prebuilts/rust
http_archive(
    name = "rust_prebuilts",
    build_file = "@gbl//toolchain:BUILD.android_rust_prebuilts.bazel",
    url = "https://android.googlesource.com/platform/prebuilts/rust/+archive/72697c0b73f7df92389bdad2ba6a8a513f00269a/linux-x86/1.72.0.tar.gz",
)

# Fetch `bindgen` from Android upstream prebuilts, i.e.:
# https://android.googlesource.com/platform/prebuilts/clang-tools/+/refs/heads/main/linux-x86/bin/bindgen
http_archive(
    name = "bindgen",
    build_file_content = """exports_files(["bindgen"])""",
    url = "https://android.googlesource.com/platform/prebuilts/clang-tools/+archive/820ba880a1e95afd4cb6645356f724b7898d387c/linux-x86/bin.tar.gz",
)

# Register all the LLVM/Rust toolchains.
register_toolchains("//toolchain:all")
